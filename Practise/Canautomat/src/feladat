1. Írj egy UresAutomata osztályt (az automata csomagba kerüljön), mely rendelkezzen bedobott pénz értéke, gépben
rendelkezésre álló poharak száma, használható-e adattagokkal. A későbbi gyerekosztályban láthatóak legyenek az
adattagok, de máshol ne! Készítsünk paraméteres konstruktort, mely az UresAutomata objektum mezőit inicializálja
a paraméterek alapján. Definiáljuk felül a toString metódust, mely szöveges formában megjeleníti, hogy az objektum
állapota „használható" vagy „nem használható", valamint megjeleníti a bedobott pénzértéket. Készítsünk getter és
setter metódusokat az adattagokhoz. Készítsünk egy penztBedob metódust, mely vár egy egész típusú számot.
UresAutomata esetén definiáljuk, hogy a függvényhívás ezt jelenítse meg: „Ez az automata nincs feltöltve,
nem használható".

2. Írjunk egy ItalAutomata osztályt (ami az UresAutomata osztályból származik) az automata csomagba.
Új adattagként adjuk meg, hogy az automata hideg vagy meleg italokat szolgáltat.
Készítsünk getter és setter metódust az új adattaghoz. Készítsünk paraméteres konstruktort, mely vár egy
rendelkezésre álló poharak száma, és egy igaz/hamis értéket, attól függően, hogy hideg (true) vagy meleg (false)
italokat szolgáltat a gép. Inicializáljuk a fenti két adattagot a paraméterek szerint, a bedobott pénz értékét
definiáljuk nullára, a használható-e attribútumot IGAZ-ra. Definiáljuk felül a toString metódust, mely az ősosztály
toString-je után hozzáfűzi: „ez a gép hideg italokat árusít" vagy „ez a gép meleg italokat árusít". Definiáljuk felül
a penztBedob metódust, mely vár egy egész típusú számot (ez jelenti azt, hogy mennyi pénzt dobtak be az automatába)
A metódus írjon ki bizonyos szövegeket a következők szerint:
95 Ft-ért lehet teát kérni.
- Ha nincs egy darab pohár se, vagy nem működőképes üzemmódban van az italautomata, írjuk ki: „Próbálkozzon később"
- Ha 95 Ft-nál kevesebbet adtak meg, írjuk ki: „Kevés a bedobott pénz"
- Ha többet adtak meg, írjuk ki, hogy Sikeresen kiadtuk a teát, és a visszajáró pénz mennyiségét.
- Ha sikeres volt a tranzakció (csak akkor) vonjunk le egyet a rendelkezésre álló poharakból, valamint növeljük a
bedobott pénzt a megfelelő értékkel.

3. Írjunk egy Forgalmazo nevű futtatható osztályt, amely maradjon csomagon kívüli (de lássa az automata csomagot).
Készítsünk egy statikus informacio nevű metódust, mely vár egy ital automatát paraméterként, (a forgalmazó cég
számára ad információkat), mely megjeleníti a következő adatokat: hány alkalommal lehet még használni az automatát,
hogy ne fogyjon el a pohárkészlet, valamint mekkora összeg található a készülékben. A main-ben hozzunk létre egy ital
automatát a parancssori paraméterek segítségével, amelyek ebben a sorrendben következnek (2 paraméter érkezik):
Rendelkezésre álló poharak száma (int) majd true/false (hideg/meleg)
Konstruktorban adjuk át ezeket, és hozzuk létre az objektumot.
Vásároljunk 100 Ft-ért belőle, majd hívjuk meg a statikus informacio metódust az automatánkra.